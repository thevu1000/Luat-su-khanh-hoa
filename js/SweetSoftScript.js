var SweetSoftScript = { Setting: { timeout: 500, MSIE: false }, Data: { arrImg: [], inprogress: false, callback: undefined }, commonFunction: { getDataQuery: function (parameterName) { var queryString = location.search.toLowerCase().substring(location.search.indexOf("?") + 1, location.search.length); parameterName = parameterName + "="; if (queryString.length > 0) { var begin = queryString.toLowerCase().indexOf(parameterName.toLowerCase()); if (begin !== -1) { begin += parameterName.length; var end = queryString.indexOf("&", begin); if (end === -1) { end = queryString.length } return unescape(queryString.substring(begin, end)) } } return undefined }, isIE: function () { var myNav = navigator.userAgent.toLowerCase(); return myNav.indexOf("msie") != -1 ? parseInt(myNav.split("msie")[1]) : false }, urlExists: function (url) { var http = new XMLHttpRequest; http.open("HEAD", url, false); http.send(); return http.status != 404 }, loadCSS: function (href) { var cssLink = $("link#customcss"); if (cssLink.length === 0) { cssLink = $("<link>"); $("head").append(cssLink); cssLink.attr({ rel: "stylesheet", type: "text/css", id: "customcss" }) } if (cssLink.attr("href") !== href) cssLink.attr({ href: href }) }, loadJS: function (src) { var jsLink = $("script#customjs"); if (jsLink.length === 0) { jsLink = $("<script>"); $("head").append(jsLink); jsLink.attr({ type: "text/javascript", id: "customjs" }) } if (jsLink.attr("src") !== src) jsLink.attr({ src: src }) }, ajaxGet: function (urlGet, dataValue, callback) { if (!$("form").hasClass(SweetSoftScript.Setting.progressClass)) { $.ajax({ type: "post", "async": true, url: urlGet, data: dataValue, contentType: "application/x-www-form-urlencoded; charset=UTF-8", beforeSend: function () { $("form").addClass(SweetSoftScript.Setting.progressClass) }, success: function (data) { $("form").removeClass(SweetSoftScript.Setting.progressClass); if (typeof callback === "function") callback(data) }, error: function () { $("form").removeClass(SweetSoftScript.Setting.progressClass); SweetSoftScript.mainFunction.hideLoading() } }) } else { } }, ajaxLayout: function (dataValue, callback) { SweetSoftScript.commonFunction.ajaxGet(SweetSoftScript.Setting.Config.pathLayout, dataValue, callback) }, ajaxSave: function (urlGet, dataValue, callback) { if (!$("form").hasClass(SweetSoftScript.Setting.progressClass)) { $.ajax({ type: "post", url: urlGet, dataType: "json", data: dataValue, contentType: "application/x-www-form-urlencoded; charset=UTF-8", beforeSend: function () { $("form").addClass(SweetSoftScript.Setting.progressClass) }, success: function (data) { $("form").removeClass(SweetSoftScript.Setting.progressClass); if (typeof callback === "function") callback(data) }, error: function () { $("form").removeClass(SweetSoftScript.Setting.progressClass); SweetSoftScript.mainFunction.hideLoading() } }) } }, replaceAllWhiteSpace: function (stringToReplace, replaceWith, useTrim) { if (useTrim) return $.trim(stringToReplace).replace(/ {2,}/g, replaceWith).replace(/\s/g, replaceWith); else return stringToReplace.replace(/ {2,}/g, replaceWith).replace(/\s/g, replaceWith) }, replaceAll: function (strtoReplace, strTarget, strSubString) { var intIndexOfMatch = strtoReplace.indexOf(strTarget); while (intIndexOfMatch != -1) { strtoReplace = strtoReplace.replace(strTarget, strSubString); intIndexOfMatch = strtoReplace.indexOf(strTarget) } return strtoReplace }, hasVerticalScroll: function (node) { if (node === undefined) { if (window.innerHeight) { return document.body.offsetHeight > innerHeight } else { return document.documentElement.scrollHeight > document.documentElement.offsetHeight || document.body.scrollHeight > document.body.offsetHeight } } else { return node.scrollHeight > node.offsetHeight } }, randomColor: function () { var letters = "0123456789ABCDEF".split(""); var color = "#"; for (var i = 0; i < 6; i++) { color += letters[Math.round(Math.random() * 15)] } return color }, randomString: function (length) { var num = 3; var s = ""; if (typeof length !== "undefined") { if (typeof length === "number") num = length; else if (typeof length === "string") { var n = parseInt(length.replace(/[^0-9\\.]+/g, "")); if (isNaN(n) === false) num = n } } var letters = "abcdefghijklmnopqrstuvwxyz0123456789".split(""); var count = letters.length - 1; for (var i = 0; i < num; i++) { s += letters[Math.round(Math.random() * count)] } return s }, customJquery: function () { $.fn.replaceWithCallback = function (replace, callback) { var ret = $.fn.replaceWith.call(this, replace); if (typeof callback === "function") { callback.call(ret) } return ret }; $.fn.attrs = function (attrs) { var t = $(this); if (attrs) { t.each(function (i, e) { var j = $(e); for (var attr in attrs) { j.attr(attr, attrs[attr]) } }); return t } else { var a = {}, r = t.get(0); if (r) { r = r.attributes; for (var i in r) { var p = r[i]; if (typeof p.nodeValue !== "undefined") a[p.nodeName] = p.nodeValue } } return a } } }, getIEVersion: function () { var rv = -1; if (navigator.appName === "Microsoft Internet Explorer") { var ua = navigator.userAgent; var re = new RegExp("MSIE ([0-9]{1,}[.0-9]{0,})"); if (re.exec(ua) != null) rv = parseFloat(RegExp.$1) } else if (navigator.appName === "Netscape") { var ua = navigator.userAgent; var re = new RegExp("Trident/.*rv:([0-9]{1,}[.0-9]{0,})"); if (re.exec(ua) !== null) rv = parseFloat(RegExp.$1) } return rv }, preloadLoadImage: function (imgSrc, callback) { var imgPreload = new Image; imgPreload.src = imgSrc; if (imgPreload.complete) { callback(imgPreload) } else { imgPreload.onload = function () { callback(imgPreload) }; imgPreload.onerror = function () { callback(undefined) } } }, defaultImage: function (elem) { var srcold = jQuery(elem).attr("src"); if (srcold.lastIndexOf("/") > 0) { var path = srcold.substring(0, srcold.lastIndexOf("/") + 1); var old1 = jQuery(elem).attr("old1"); if (typeof old1 === "undefined") { var srcnew = path + "thumbnail_no_image.jpg"; elem.setAttribute("old1", "thumbnail_no_image.jpg"); SweetSoftScript.commonFunction.preloadLoadImage(srcnew, function (img) { if (typeof img === "undefined") { var old2 = jQuery(elem).attr("old2"); if (typeof old2 === "undefined") { elem.setAttribute("old2", "no_image.jpg"); srcnew = path + "no_image.jpg"; SweetSoftScript.commonFunction.preloadLoadImage(srcnew, function (img) { if (typeof img !== "undefined") { elem.src = srcnew } }) } } else elem.src = srcnew }) } } } }, mainFunction: { loadContent: function (div, type, pageindx, datasend) { var url = ""; switch (type) { case "newscat": case "newsparent": case "tourcat": case "tourviewmost": case "searcharticle": case "videocat": case "searchtour": case "newsdetail": case "photocat": case "hotelcat": case "searchhotel": url = "GetContent.aspx"; break; case "tourdetail": url = "GetRelated.aspx"; break }setTimeout(function () { $.ajax({ type: "POST", url: url, data: datasend + "&pindx=" + pageindx, contentType: "application/x-www-form-urlencoded; charset=UTF-8", cache: false, success: function (html) { setTimeout("$('div.loading').remove();", 1e3); if (html.length > 0) { if (html === "error") { if (typeof SweetSoftScript.Data.callback === "function") SweetSoftScript.Data.callback() } else { var _data_temp = html.replace(/(\r\n|\n|\r|"")/gm, ""); var obj = JSON.parse(_data_temp); div.attr("data-pageindex", pageindx); var elems = $("<div>" + obj.data + "</div>"); $.each(elems.children(), function (i, o) { $(o).appendTo(div) }); $(window).trigger("resize"); var imgLoad = elems.find("img.lazyload"); if (imgLoad.length > 0) { SweetSoftScript.Data.arrImg = imgLoad; SweetSoftScript.mainFunction.queueLoad(0) } else SweetSoftScript.Data.inprogress = false; if (obj.iscontinue.toString().toLowerCase() === "false") { var loadmorelink = $(".newsList").find(".loadMore"); loadmorelink.remove() } if (typeof SweetSoftScript.Data.callback === "function") SweetSoftScript.Data.callback() } } else { div.append('<input type="hidden"/>'); div.removeAttr("data-catid"); SweetSoftScript.Data.inprogress = false; if (typeof $(window).data("jqueryPagedScroll") !== "undefined") { $(window).data("jqueryPagedScroll").settings.pagesToScroll = $(window).data("jqueryPagedScroll").settings.startPage = 1 } if (typeof SweetSoftScript.Data.callback === "function") SweetSoftScript.Data.callback() } }, error: function () { setTimeout("$('div.loading').remove();", 1e3); div.append('<input type="hidden"/>'); SweetSoftScript.Data.inprogress = false; if (typeof $(window).data("jqueryPagedScroll") !== "undefined") $(window).data("jqueryPagedScroll").lastScrollPosition -= 1; if (typeof SweetSoftScript.Data.callback === "function") SweetSoftScript.Data.callback() } }) }, 1e3) }, processLoad: function (div, callback) { if (SweetSoftScript.Data.inprogress === false) { var categoryid = div.attr("data-catid"); var typeload = div.attr("data-type"); if (typeof categoryid !== "undefined" && typeof typeload !== "undefined") { var newsid; if (typeload === "relatedtestimonial") { newsid = div.attr("data-testimonialid"); if (typeof newsid === "undefined") { if (typeof callback === "function") callback(); return } } var pageindx = div.attr("data-pageindex"); if (typeof pageindx !== "undefined") pageindx = parseFloat(pageindx) + 1; else pageindx = 2; var pagesize = div.attr("data-pagesize"); if (typeof pagesize !== "undefined") { } else { pagesize = 4; div.attr("data-pagesize", pagesize) } SweetSoftScript.Data.callback = callback; SweetSoftScript.Data.inprogress = true; if (typeof arrNewsId !== "undefined") var datasend = "catid=" + categoryid + "&num=" + pagesize + "&type=" + typeload + "&arrNewsId=" + arrNewsId; else var datasend = "catid=" + categoryid + "&num=" + pagesize + "&type=" + typeload; if (typeload === "relatedtestimonial") datasend += "&testimonialid=" + newsid; SweetSoftScript.mainFunction.loadContent(div, typeload, pageindx, datasend); div.attr("data-pageindex", pageindx) } } if (SweetSoftScript.Data.inprogress === false) { if (typeof callback === "function") callback() } }, loadImageSrc: function (imgLoadColl) { if (imgLoadColl.length > 0) { var count = imgLoadColl.length; var indx = 0; imgLoadColl.each(function () { var el = $(this); var imgsrc = el.attr("data-src"); if (imgsrc && imgsrc.length > 0) { SweetSoftScript.commonFunction.preloadLoadImage(imgsrc, function (img) { if (typeof img !== "undefined") { el.fadeOut("normal", function () { $(this).attr({ src: img.src }).fadeIn() }) } indx += 1; if (indx === count) { SweetSoftScript.Data.inprogress = false; if (typeof SweetSoftScript.Data.callback === "function") SweetSoftScript.Data.callback() } }) } }) } }, queueLoad: function (indx, useFade) { if (typeof indx !== "undefined") { if (indx < SweetSoftScript.Data.arrImg.length) { var el = $(SweetSoftScript.Data.arrImg[indx]); var imgsrc = el.attr("data-src"); if (imgsrc && imgsrc.length > 0) { SweetSoftScript.commonFunction.preloadLoadImage(imgsrc, function (img) { if (typeof img !== "undefined") { if (typeof useFade !== "undefined" && useFade === true) { el.fadeOut("normal", function () { $(this).attr({ src: img.src }).fadeIn("fast", function () { setTimeout(function () { SweetSoftScript.mainFunction.queueLoad(indx + 1, useFade) }, SweetSoftScript.Setting.timeout) }) }) } else { el.attr({ src: img.src }); setTimeout(function () { SweetSoftScript.mainFunction.queueLoad(indx + 1, useFade) }, SweetSoftScript.Setting.timeout) } } else SweetSoftScript.mainFunction.queueLoad(indx + 1) }) } else SweetSoftScript.mainFunction.queueLoad(indx + 1) } else { SweetSoftScript.Data.arrImg = []; SweetSoftScript.Data.inprogress = false; if (typeof SweetSoftScript.Data.callback === "function") SweetSoftScript.Data.callback() } } else { SweetSoftScript.Data.inprogress = false } } } };